/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ShowGame,
  StoreGame,
} from '../models';
import {
    ShowGameFromJSON,
    ShowGameToJSON,
    StoreGameFromJSON,
    StoreGameToJSON,
} from '../models';

export interface Show1Request {
    id: number;
}

export interface Store1Request {
    storeGame: StoreGame;
}

/**
 * 
 */
export class GameControllerApi extends runtime.BaseAPI {

    /**
     */
    async show1Raw(requestParameters: Show1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShowGame>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling show1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShowGameFromJSON(jsonValue));
    }

    /**
     */
    async show1(requestParameters: Show1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShowGame> {
        const response = await this.show1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async store1Raw(requestParameters: Store1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShowGame>> {
        if (requestParameters.storeGame === null || requestParameters.storeGame === undefined) {
            throw new runtime.RequiredError('storeGame','Required parameter requestParameters.storeGame was null or undefined when calling store1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/game`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StoreGameToJSON(requestParameters.storeGame),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShowGameFromJSON(jsonValue));
    }

    /**
     */
    async store1(requestParameters: Store1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShowGame> {
        const response = await this.store1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
